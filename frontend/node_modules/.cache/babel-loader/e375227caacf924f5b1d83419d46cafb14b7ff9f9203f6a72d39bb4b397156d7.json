{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\packt\\\\git\\\\cloudWebProject\\\\frontend\\\\src\\\\context\\\\ReveiwContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ReviewContext = /*#__PURE__*/createContext();\nexport const ReviewListProvider = ({\n  children\n}) => {\n  _s();\n  const [reviews, setReviews] = useState([]);\n  const [review, setReview] = useState({});\n  const updateReviews = reviews => {\n    setReviews(reviews);\n  };\n  const addReview = review => {\n    setReviews([...reviews, review]);\n  };\n  const updateReview = review => {\n    setReview(review);\n  };\n  const removeReviewById = id => {\n    const newReviews = Reviews.filter(review => review.id !== id);\n    setReviews(newReviews);\n  };\n  return /*#__PURE__*/_jsxDEV(ReviewContext.Provider, {\n    value: {\n      reviews,\n      review,\n      updateReviews,\n      updateReview,\n      removeReviewById,\n      addReview\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 11\n  }, this);\n};\n_s(ReviewListProvider, \"aeoqziRLTxqkTxX2/TYe7zAm7z4=\");\n_c = ReviewListProvider;\nvar _c;\n$RefreshReg$(_c, \"ReviewListProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","ReviewContext","ReviewListProvider","children","_s","reviews","setReviews","review","setReview","updateReviews","addReview","updateReview","removeReviewById","id","newReviews","Reviews","filter","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/packt/git/cloudWebProject/frontend/src/context/ReveiwContext.js"],"sourcesContent":["import React, { createContext, useState } from 'react';\r\n\r\nexport const ReviewContext = createContext();\r\n\r\nexport const ReviewListProvider = ({ children }) => {\r\n  const [reviews, setReviews] = useState([]);\r\n  const [review, setReview] = useState({});\r\n\r\n  const updateReviews = (reviews) => {\r\n    setReviews(reviews)\r\n  }\r\n\r\n  const addReview = (review) => {\r\n    setReviews([... reviews, review]);\r\n  }\r\n\r\n  const updateReview = (review) => {\r\n    setReview(review);\r\n  }\r\n\r\n  const removeReviewById = (id) => {\r\n    const newReviews = Reviews.filter((review) => review.id !== id);\r\n    setReviews(newReviews);\r\n  }\r\n\r\n  return  <ReviewContext.Provider value={{ reviews, review, updateReviews, updateReview, removeReviewById, addReview }}>\r\n      {children}\r\n    </ReviewContext.Provider>\r\n  \r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,OAAO,MAAMC,aAAa,gBAAGJ,aAAa,CAAC,CAAC;AAE5C,OAAO,MAAMK,kBAAkB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAClD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAExC,MAAMW,aAAa,GAAIJ,OAAO,IAAK;IACjCC,UAAU,CAACD,OAAO,CAAC;EACrB,CAAC;EAED,MAAMK,SAAS,GAAIH,MAAM,IAAK;IAC5BD,UAAU,CAAC,CAAC,GAAID,OAAO,EAAEE,MAAM,CAAC,CAAC;EACnC,CAAC;EAED,MAAMI,YAAY,GAAIJ,MAAM,IAAK;IAC/BC,SAAS,CAACD,MAAM,CAAC;EACnB,CAAC;EAED,MAAMK,gBAAgB,GAAIC,EAAE,IAAK;IAC/B,MAAMC,UAAU,GAAGC,OAAO,CAACC,MAAM,CAAET,MAAM,IAAKA,MAAM,CAACM,EAAE,KAAKA,EAAE,CAAC;IAC/DP,UAAU,CAACQ,UAAU,CAAC;EACxB,CAAC;EAED,oBAAQd,OAAA,CAACC,aAAa,CAACgB,QAAQ;IAACC,KAAK,EAAE;MAAEb,OAAO;MAAEE,MAAM;MAAEE,aAAa;MAAEE,YAAY;MAAEC,gBAAgB;MAAEF;IAAU,CAAE;IAAAP,QAAA,EAChHA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B,CAAC;AAAAlB,EAAA,CAzBYF,kBAAkB;AAAAqB,EAAA,GAAlBrB,kBAAkB;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}